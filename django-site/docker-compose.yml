version: '3.8'

services:
  web:
    build: 
      context: ./voiture
      dockerfile: Dockerfile.front
    # command: gunicorn voiture.wsgi:application --bind 0.0.0.0:8000
    volumes:
      # - ./voiture:/app
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "8000:8000"
    environment:
      - RUNNING_CONTAINER=public
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    depends_on:
      - db
      - api

  api:
    build: 
      context: ./voiture
      dockerfile: Dockerfile.api
    command: >
      sh -c "python manage.py collectstatic --noinput && \
            python manage.py migrate && \
            python manage.py createsuperuser \
              --email ${SUPERUSER_EMAIL} --username ${SUPERUSER_NAME} --noinput && \
            python manage.py shell < voiture/super.py
            python manage.py runserver 0.0.0.0:${API_PORT}"
    volumes:
      - ./voiture:/app
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - RUNNING_CONTAINER=api.apps.ApiConfig
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    depends_on:
      - db

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "8080:80"
    depends_on:
      - web
      - api 


volumes:
  postgres_data:
  static_volume:
  media_volume:

